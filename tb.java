import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Random;

/**
 * @author      Iman Hosseini <hosseini.iman@yahoo.com>
 * @version     1.0                 (current version number of program)
 * This program generates a C code with 2^N functions called f[binary rep of i] 
 * where i in [0,2^N-1] e.g. for N=3: f001, f010, f011, ..
 * The functions call each other such that the call graph constitutes a N-dimen
 * -sional hypercube. (two functions call each other iff they differ in 1 bit.
 * To use call the program with an int, which would be N. If no args are passed
 * default N is 5.
 */
public class tb{

    static int N = 20;
    static double p =0.6;

    public static void main(String[] args){
        Random r= new Random();
        HashMap<Integer,HashSet<Integer>> edges = new HashMap<>();
        if(args.length==1) N = Integer.parseInt(args[0]);
        StringBuilder prog = new StringBuilder("// Generated by: tb \n\n");
        StringBuilder vld = new StringBuilder();
        vld.append(N+"\n");
        for(int i=0;i<N;i++){
            prog.append("void f"+(i)+"();\n");
        }
        prog.append("int main(){ return 0;}\n");
        // System.out.println("hello world");
        for(int i=0; i<N; i++){
            // System.out.println(i);
            prog.append("void f"+(i)+"(){");
            for(int j=0; j<N; j++){
                if(r.nextDouble() > p) {
                    prog.append("f"+(j)+"();");
                    vld.append(j+",");
                }
            }
            vld.append(";");
            prog.append("}\n");

        }
        String filename = "rg"+N+".c";
        try (PrintWriter out = new PrintWriter(filename)) {
            out.println(prog);
        }catch(Exception e){
        }
        String vname= "rg"+N+".vld";
        try (PrintWriter out = new PrintWriter(vname)) {
            out.println(vld);
        }catch(Exception e){
        }

    }





}